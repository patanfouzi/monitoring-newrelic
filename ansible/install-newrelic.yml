- name: Install and configure New Relic Infrastructure agent
  hosts: all              # matches any host provided via -i
  become: yes             # run tasks as root
  gather_facts: yes       # collect system info (OS, packages, etc.)
  vars:
    license_key: "{{ lookup('env', 'NEW_RELIC_LICENSE_KEY') }}"  # from GitHub Secrets
    newrelic_path: /opt/newrelic
    app_path: /home/ubuntu/spring-petclinic
    app_port: 8080
  tasks:
    - name: Ensure apt-transport-https is installed
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes

    - name: Add New Relic GPG key
      ansible.builtin.apt_key:
        url: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
        state: present

    - name: Add New Relic apt repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt {{ ansible_distribution_release }} main"
        state: present

    - name: Install New Relic Infrastructure agent
      ansible.builtin.apt:
        name: newrelic-infra
        state: present
        update_cache: yes

    - name: Configure New Relic license key
      ansible.builtin.copy:
        dest: /etc/newrelic-infra.yml
        content: |
          license_key: {{ license_key }}
        owner: root
        group: root
        mode: '0600'

    - name: Ensure New Relic service is running
      ansible.builtin.systemd:
        name: newrelic-infra
        state: started
        enabled: yes



    # ---------- Install unzip for Java agent ----------
    - name: Ensure unzip is installed
      apt:
        name: unzip
        state: present
        update_cache: yes

    - name: Download New Relic Java Agent
      get_url:
        url: "https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip"
        dest: /opt/newrelic-java.zip
        mode: '0644'

    - name: Unzip New Relic Java Agent
      unarchive:
        src: /opt/newrelic-java.zip
        dest: /opt/
        remote_src: yes
        creates: "{{ newrelic_path }}/newrelic.jar"

    - name: Configure New Relic Java Agent
      copy:
        dest: "{{ newrelic_path }}/newrelic.yml"
        content: |
          common: &default_settings
            license_key: {{ license_key }}
            app_name: "SpringPetClinic"
        owner: root
        group: root
        mode: '0600'

    - name: Find Spring Boot JAR
      find:
        paths: "{{ app_path }}/target"
        patterns: "*.jar"
        file_type: file
      register: spring_jar

    - name: Fail if no JAR found
      fail:
        msg: "No JAR found in {{ app_path }}/target. Please check the app path."
      when: spring_jar.files | length == 0

    - name: Set fact for app JAR
      set_fact:
        app_jar: "{{ spring_jar.files[0].path }}"

    - name: Create systemd service for Spring Boot PetClinic app
      copy:
        dest: /etc/systemd/system/petclinic.service
        content: |
          [Unit]
          Description=Spring PetClinic Application
          After=network.target

          [Service]
          User=ubuntu
          ExecStart=/usr/bin/java -javaagent:{{ newrelic_path }}/newrelic.jar -jar {{ app_jar }}
          SuccessExitStatus=143
          Restart=always

          [Install]
          WantedBy=multi-user.target
      mode: '0644'

    - name: Wait for Spring Boot PetClinic to be up
      wait_for:
        host: 127.0.0.1
        port: "{{ app_port }}"
        delay: 5
        timeout: 60
        state: started
